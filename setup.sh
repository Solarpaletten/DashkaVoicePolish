#!/bin/bash

# Setup Script –¥–ª—è DashkaBot React + Vite + TypeScript + TailwindCSS Frontend
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: chmod +x setup.sh && ./setup.sh

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DashkaBot React Frontend..."

# 1. –°–æ–∑–¥–∞–Ω–∏–µ Vite –ø—Ä–æ–µ–∫—Ç–∞
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ Vite + React + TypeScript –ø—Ä–æ–µ–∫—Ç–∞..."
cd /var/www/ai/DashkaVoicePolish/
npm create vite@latest frontend -- --template react-ts
cd frontend

# 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "‚¨áÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
npm install

# 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ TailwindCSS
echo "üé® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ TailwindCSS..."
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p

# 4. –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫..."
mkdir -p src/components/Dashboard
mkdir -p src/components/UI
mkdir -p src/{hooks,services,types,config/languages}

# 5. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
touch src/AppShell.tsx
touch src/components/Dashboard/{Dashboard,Header,LanguageSelector,VoiceRecorder,TranslationPanel,StatusIndicators}.tsx
touch src/components/UI/{Button,Input,Card}.tsx
touch src/hooks/{useWebSocket,useTranslation,useSpeechRecognition}.ts
touch src/services/{api,websocket}.ts
touch src/types/index.ts
touch src/config/{currentLanguage,types}.ts
touch src/config/languages/{polish,german,english,index}.ts

# 6. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è TailwindCSS
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ TailwindCSS..."
cat > tailwind.config.js << 'EOF'
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        'dashka-blue': '#7c3aed',
        'dashka-green': '#10b981',
        'dashka-coral': '#f87171'
      }
    },
  },
  plugins: [],
}
EOF

# 7. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ index.css —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –±–µ–ª–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
echo "üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –±–µ–ª–æ–≥–æ —Ç–µ–∫—Å—Ç–∞..."
cat > src/index.css << 'EOF'
@tailwind base;
@tailwind components;
@tailwind utilities;

/* –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è glassmorphism */
.glass {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –¢–µ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Å–≤–µ—Ç–ª—ã—Ö –ø–æ–ª—è—Ö –≤–≤–æ–¥–∞ */
.input-field {
  @apply bg-white/90 text-gray-900 placeholder-gray-500;
  @apply border border-white/30 rounded-xl px-4 py-3;
  @apply focus:outline-none focus:ring-2 focus:ring-white/50;
}

/* –¢–µ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ textarea */
.textarea-field {
  @apply bg-white/90 text-gray-900 placeholder-gray-500;
  @apply border border-white/30 rounded-xl px-4 py-3;
  @apply focus:outline-none focus:ring-2 focus:ring-white/50;
  @apply resize-none;
}

/* –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ - —Å–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω —Å —Ç–µ–º–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º */
.translation-result {
  @apply bg-white/95 text-gray-800 rounded-xl p-4 min-h-[80px];
  @apply border border-white/30;
}

/* –ö–Ω–æ–ø–∫–∏ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç—Ä–∞—Å—Ç–æ–º */
.btn-primary {
  @apply bg-green-500 hover:bg-green-600 text-white font-semibold;
  @apply px-6 py-3 rounded-xl transition-colors duration-200;
  @apply shadow-lg hover:shadow-xl;
}

.btn-secondary {
  @apply bg-white/20 hover:bg-white/30 text-white font-semibold;
  @apply px-6 py-3 rounded-xl transition-colors duration-200;
  @apply border border-white/30 backdrop-blur-sm;
}

/* –°–µ–ª–µ–∫—Ç–æ—Ä—ã —è–∑—ã–∫–æ–≤ */
.language-btn {
  @apply px-4 py-3 rounded-xl font-semibold transition-all duration-200;
  @apply border-2 backdrop-blur-sm;
}

.language-btn.active {
  @apply bg-white/90 text-gray-900 border-white/50;
}

.language-btn.inactive {
  @apply bg-white/10 text-white border-white/30;
  @apply hover:bg-white/20;
}

/* –°—Ç–∞—Ç—É—Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */
.status-indicator {
  @apply flex items-center gap-2 text-sm font-medium;
}

.status-dot {
  @apply w-2 h-2 rounded-full;
}

.status-connected {
  @apply bg-green-400;
}

.status-disconnected {
  @apply bg-red-400;
}
EOF

# 8. –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
cat > .env << 'EOF'
VITE_API_URL=https://api.dashkapolish.swapoil.de
VITE_WS_URL=wss://api.dashkapolish.swapoil.de/ws
EOF

# 9. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ vite.config.ts
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Vite –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cat > vite.config.ts << 'EOF'
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

export default defineConfig({
  plugins: [react()],
  server: {
    port: 5173,
    host: true
  },
  build: {
    outDir: 'dist',
    assetsDir: 'assets'
  }
})
EOF

# 10. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json scripts
echo "üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json scripts..."
npm pkg set scripts.type-check="tsc --noEmit"

# 11. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ App.tsx
cat > src/App.tsx << 'EOF'
import AppShell from './AppShell';

function App() {
  return <AppShell />;
}

export default App;
EOF

# 12. –°–æ–∑–¥–∞–Ω–∏–µ AppShell.tsx
cat > src/AppShell.tsx << 'EOF'
import Dashboard from './components/Dashboard/Dashboard';

function AppShell() {
  return <Dashboard />;
}

export default AppShell;
EOF

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. cd frontend-react"
echo "2. npm run dev  # –ó–∞–ø—É—Å–∫ dev —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ http://localhost:5173"
echo "3. npm run build  # –°–±–æ—Ä–∫–∞ –¥–ª—è production"
echo ""
echo "üîß –î–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:"
echo "   –†–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª: src/config/currentLanguage.ts"
echo ""
echo "üé® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π:"
echo "   - –ü–æ–ª—è –≤–≤–æ–¥–∞ —Ç–µ–ø–µ—Ä—å —Å –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º –∏ —á–µ—Ä–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º"
echo "   - –ü—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç —á–µ—Ä–Ω—ã–º –Ω–∞ –±–µ–ª–æ–º —Ñ–æ–Ω–µ"
echo "   - –£–ª—É—á—à–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤"